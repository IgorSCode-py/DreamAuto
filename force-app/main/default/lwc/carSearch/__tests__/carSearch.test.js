import { createElement } from 'lwc';
import CarSearch from 'c/carSearch';

const CAR_TYPE = {
    "Id":'123',
    "Name":'Luxury'
}

describe('c-car-search', () => {
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
    });

    async function flushPromises() {
        return Promise.resolve();
    }

    /*
    it('Fires the event on search', async () => {
        const element = createElement('c-car-search', {
            is: CarSearch
        });
        document.body.appendChild(element);

        const handler = jest.fn();
        element.addEventListener('search', handler);

        const anchorEl = element.shadowRoot.querySelector('c-car-search-form');
        anchorEl.dispatchEvent(new CustomEvent('search', {
                                    detail: CAR_TYPE,
                                    bubbles: false
                                    }));

        // Wait for any asynchronous DOM updates
        await flushPromises();

        // Validate if event got fired
        //expect(handler).toHaveBeenCalled();
        //const selectEvent = handler.mock.calls[0][0];
        //expect(selectEvent.detail.carTypeId).toBe(CAR_TYPE.Id);
    });
    */

    it('TODO: test case generated by CLI command, please fill in test logic', () => {
        // Arrange
        const element = createElement('c-car-search', {
            is: CarSearch
        });

        // Act
        document.body.appendChild(element);

        // Assert
        // const div = element.shadowRoot.querySelector('div');
        expect(1).toBe(1);
    });
});